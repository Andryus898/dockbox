version: '2'

services:

###
### APLICACIONES
###

    aplicaciones:
        image: tianon/true
        volumes:
            # Forma A: directorio dentro de dockbox
            # - ./web:/var/www

            # Forma B: dockbox dentro de un proyecto
            #- ../:/var/www

            # Forma C: proyectos al mismo nivel de dockbox
            - ../:/var/www
            - ../app-ofertaski/:/var/www/app-ofertaski
            - ../app-vue/:/var/www/app-vue
            - ../ofertaski-laravel/:/var/www/ofertaski-laravel
            - ../plantillas/:/var/www/plantillas
            - ../demo-ci/:/var/www/demo-ci
            - ../demo-ci-dev/:/var/www/demo-ci-dev
            - ../demo-ci-pre/:/var/www/demo-ci-pre
            - ../leadbrain/:/var/www/leadbrain
            - ../core/:/var/www/core
            - ../affiliate/:/var/www/affiliate
            - ../app-template/:/var/www/app-template
            - ../landing-viewer/:/var/www/landing-viewer
            - ../landings/:/var/www/landings
            - ../landings/iltuoprestito:/var/www/landings/iltuoprestito


###
### SERVIDOR UBUNTU 16.04
###
    servidor:
        build:
            context: ./server
            args:
                - INSTALL_XDEBUG=true
                - INSTALL_SOAP=true
                - INSTALL_MONGO=true
                - INSTALL_NODE=true
                - INSTALL_YARN=true
                - COMPOSER_GLOBAL_INSTALL=true
                - INSTALL_WORKSPACE_SSH=true
                - INSTALL_DEPLOYER=false
                - INSTALL_MC=false
                - PUID=1000
                - PGID=1000
                - NODE_VERSION=stable
                - YARN_VERSION=latest
                - TZ=UTC
        volumes_from:
            - aplicaciones
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            # OBTENER CON: docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
            - "dockerhost:172.19.0.2"
        ports:
           - "2222:22"
        tty: true


###
### PHP 7.0 con APACHE
###
#    php:
#        build:
#            context: ./php
#            args:
#                - INSTALL_XDEBUG=true
#                - INSTALL_SOAP=true
#                - INSTALL_MONGO=true
#                - INSTALL_ZIP_ARCHIVE=true
#                - INSTALL_BCMATH=true
#                - INSTALL_PHPREDIS=true
#                - INSTALL_MEMCACHED=false
#                - INSTALL_OPCACHE=true
#                - INSTALL_EXIF=true
#                - INSTALL_AEROSPIKE_EXTENSION=false
#                - INSTALL_MYSQLI=true
#                - INSTALL_TOKENIZER=true
#                - INSTALL_INTL=true
#                - INSTALL_GHOSTSCRIPT=true
#            dockerfile: Dockerfile
#        volumes_from:
#            - aplicaciones
#        volumes:
#            - ./log/apache2:/var/log/apache2
#        expose:
#            - "9000"
#        depends_on:
#            - servidor
#        extra_hosts:
#            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
#            - "dockerhost:172.18.0.1"
#            - "app-ofertaski.dev:172.18.0.1"
#            - "leadbrain.dev:172.18.0.1"
#            - "affiliate.adgo-tech.dev:172.18.0.1"
#            - "core.adgo-tech.dev:172.18.0.1"
#            - "viewer.adgo-tech.dev:172.18.0.1"
#            - "template.adgo-tech.dev:172.18.0.1"
#        environment:
#            - PHP_IDE_CONFIG=PHP_IDE_CONFIG=serverName=desarrollo
#        ports:
#          - "80:80"
#          - "443:443"


###
### PHP 7.0
###
    php-fpm:
        build:
            context: ./php-fpm
            args:
              - INSTALL_XDEBUG=true
              - INSTALL_SOAP=true
              - INSTALL_MONGO=false
              - INSTALL_ZIP_ARCHIVE=true
              - INSTALL_BCMATH=true
              - INSTALL_PHPREDIS=true
              - INSTALL_MEMCACHED=true
              - INSTALL_OPCACHE=true
              - INSTALL_EXIF=true
              - INSTALL_AEROSPIKE_EXTENSION=false
              - INSTALL_MYSQLI=true
              - INSTALL_TOKENIZER=true
              - INSTALL_INTL=true
              - INSTALL_GHOSTSCRIPT=true
        volumes_from:
            - aplicaciones
        volumes:
            - ./php-fpm/php70.ini:/usr/local/etc/php/php.ini
        expose:
            - "9000"
        depends_on:
            - servidor
        extra_hosts:
            - "dockerhost:172.18.0.1"
        environment:
            - PHP_IDE_CONFIG=PHP_IDE_CONFIG=serverName=desarrollo


###
### PHP Worker
###
    php-worker:
        build:
            context: ./php-worker
        volumes_from:
            - aplicaciones
        depends_on:
            - servidor


###
### APACHE
###
    apache2:
        build:
            context: ./apache2
            args:
                - PHP_SOCKET=php-fpm:9000
        volumes_from:
            - aplicaciones
        volumes:
            - ./log/apache2:/var/log/apache2
            - ./apache2/sites:/etc/apache2/sites-available
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - php-fpm

###
### MYSQL
###
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_DATABASE=demo
                - MYSQL_USER=dev
                - MYSQL_PASSWORD=123456
                - MYSQL_ROOT_PASSWORD=root
        volumes:
            - mysql:/var/lib/mysql
            - ./data/mysql:/var/lib/mysql
        ports:
            - "3306:3306"
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:172.18.0.1"


###
### POSTGRESQL
###
    postgres:
        build: ./postgres
        volumes:
            - ./data/postgres/data:/var/lib/postgresql/data
            - ./data/postgres/backup:/var/lib/postgresql/backup
            - ./log/postgres:/var/log/postgresql
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: demo
            POSTGRES_USER: dev
            POSTGRES_PASSWORD: 123456


###
### MSSQL
###
    mssql:
        build:
            context: ./mssql
        environment:
            - MSSQL_DATABASE=homestead
            - SA_PASSWORD=123456
            - ACCEPT_EULA=Y
        volumes:
            - ./data//mssql:/var/opt/mssql
        ports:
            - "1433:1433"

###
### POSTGRESQL PostGis
###
    postgres-postgis:
        build: ./postgres-postgis
        volumes:
            - ./data/postgis/data:/var/lib/postgresql/data
        ports:
            - "5433:5432"
        environment:
            POSTGRES_DB: demo
            POSTGRES_USER: dev
            POSTGRES_PASSWORD: 123456


###
### MARIADB
###
    mariadb:
        build: ./mariadb
        volumes:
            - ./data/mariadb:/var/lib/mysql
        ports:
            - "3307:3306"
        environment:
            MYSQL_DATABASE: demo
            MYSQL_USER: dev
            MYSQL_PASSWORD: 123456
            MYSQL_ROOT_PASSWORD: root


###
### MONGODB
###
    mongo:
        build: ./mongo
        ports:
            - "27017:27017"
        volumes:
            - ./data/mongo/db:/data/db
            - ./data/mongo/configdb:/data/configdb


###
### PHPMYADMIN
###
    phpmyadmin:
        build: ./phpmyadmin
        environment:
            PMA_ARBITRARY: 1
            MYSQL_USER: dev
            MYSQL_PASSWORD: 123456
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "8081:80"
        depends_on:
            # for mysql container
            - "mysql"
            # for mariadb container
            # - "mariadb"


###
### PGADMIN
###
    pgadmin:
        build: ./pgadmin
        ports:
            - "5050:5050"
        links:
            - postgres


###
### REDIS
###
    redis:
        build: ./redis
        volumes:
            - ./data/redis:/data
        ports:
            - "6379:6379"


###
### ELASTICSEARCH
###
    elasticsearch:
        build: ./elasticsearch
        volumes:
            - ./data/elasticsearch/data:/usr/share/elasticsearch/data
            - ./data/elasticsearch/plugins:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"


###
### JENKINS
###
    jenkins:
        build: ./jenkins
        ports:
          - '49001:8080'
          - '444:8443'
          - '50000:50000'
        volumes:
          - ./data/jenkins/jenkins_home:/var/jenkins_home
          - ./data/jenkins/docker.sock:/var/run/docker.sock
          - ./data/jenkins/docker:/usr/bin/docker


###
### RABBITMQ
###
    rabbitmq:
        build: ./rabbitmq
        ports:
            - "5672:5672"
            - "15671:15671"
            - "8082:15672"
        privileged: true
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest



###
### JIRA
###
    jira:
        build: ./jira
        volumes:
            - ./data/jira/jira-webapp:/var/atlassian/jira
            - ./data/jira/logs:/opt/atlassian/jira/logs
        ports:
            - "8087:8080"


volumes:
    mysql:
        driver: "local"
    postgres:
        driver: "local"
    mssql:
        driver: "local"
    memcached:
        driver: "local"
    redis:
        driver: "local"
    mariadb:
        driver: "local"
    mongo:
        driver: "local"
    phpmyadmin:
        driver: "local"
    elasticsearch-data:
        driver: "local"
    elasticsearch-plugins:
        driver: "local"
    sessions:    ## nothing is connected to this (- ./data/sessions:/sessions)
        driver: "local"
    jenkins:
        driver: "local"
    jira:
        driver: "local"